swagger: "2.0"
info:
  description: "Authentication API"
  version: "1.0.0"
  title: "Edunet"
host: "127.0.0.1:8080"
basePath: "/v1"
tags:
  - name: "user"
    description: "Manage user"
  - name: "schools"
    description: "Manage schools"
  - name: "login"
    description: "Manage login"
  - name: "diplomas"
    description: "Manage diplomas"
  - name: "major department"
    description: "Manage diplomas"
schemes:
  - "http"
  - "https"
paths:
  /user:
    get:
      tags:
        - "user"
      summary: "get a user"
      description: "This api is used to get user."
      operationId: "get_users"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: user_type
          type: string
        - in: query
          name: user_id
          type: string
        - in: query
          name: school_id
          type: string
        - in: query
          name: department_name
          type: string
      responses:
        200:
          description: "Response message after successfully get a user"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

    post:
      tags:
        - "user"
      summary: "add a user"
      description: "This api is used to add a user."
      operationId: "add_user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: argument needed
          schema:
            type: object
            properties:
              id:
                type: string
                description: "You can include id field if you want to use your own special id instead of auto-generated id"
                example: "asdasdasdasd"
              name:
                type: string
                description: "name of the user you want to add (required)"
                example: "asdasdasd"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "user added successfully"
              user_id:
                type: string
                example: "qweqweqweqwe"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

  /user/{user_id}:
    put:
      tags:
        - "user"
      summary: "edit a user"
      description: "This api is used to edit a user."
      operationId: "edit_user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          type: "string"
          required: true
          description: "user_id"
        - in: "body"
          name: "user_data"
          description: "user_data to update"
          required: true
          schema:
            type: "object"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "edit user successfully"
              user_id:
                type: string
                example: "qweqweqweqwe"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

  /students_by_class:
    post:
      tags:
        - "user"
      summary: "get list student by class"
      description: "This api is used to get list student by class."
      operationId: "get_student_info_by_class"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: argument needed
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: "student_id of the user you want to search "
                example: "asdasdasdasd"
              class_name:
                type: string
                description: "class_name of the student you want to search (required)"
                example: "asdasdasd"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "Edit point successfully"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

  /user/self:
    get:
      tags:
        - "user"
      summary: "get self user info"
      description: "This api is used get self user info."
      operationId: "self_user_info"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response message after successfully get a user"
          schema:
            properties:
              message:
                type: string
                example: "Get user successfully"
              data:
                type: string
                example: "data:{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

  /majors:
    get:
      tags:
        - "major department"
      summary: "get major"
      description: "This api is used get major info."
      operationId: "list_major"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: department_id
          type: string
      responses:
        200:
          description: "Response message after successfully get a user"
          schema:
            properties:
              message:
                type: string
                example: "Get user successfully"
              data:
                type: string
                example: "data:{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.major_department_controller"

  /departments:
    get:
      tags:
        - "major department"
      summary: "get major"
      description: "This api is used get list_department info."
      operationId: "list_department"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response message after successfully get a user"
          schema:
            properties:
              message:
                type: string
                example: "Get user successfully"
              data:
                type: string
                example: "data:{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.major_department_controller"

  # schools
  /schools:
    get:
      tags:
        - "schools"
      summary: "get a schools"
      description: "This api is used to get schools."
      operationId: "get_schools"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: school_id
          type: string
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.schools_controller"

  # diplomas
  /diplomas:
    get:
      tags:
        - "diplomas"
      summary: "get a diplomas"
      description: "This api is used to get diplomas."
      operationId: "get_diplomas"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: diplomas_id
          type: string
        - in: query
          name: user_id
          type: string
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"
    post:
      tags:
        - "diplomas"
      summary: "create a diplomas"
      description: "This api is used to create diplomas."
      operationId: "create_diplomas"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  /diplomas/{user_id}:
    put:
      tags:
        - "diplomas"
      summary: "get a diplomas"
      description: "This api is used to edit diplomas."
      operationId: "edit_diplomas"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          type: "string"
          required: true
          description: "user_id"
        - in: "body"
          name: "diplomas_data"
          description: "diplomas_data to update"
          required: true
          schema:
            type: "object"
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  /diplomas/point:
    post:
      tags:
        - "diplomas"
      summary: "edit or create point"
      description: "This api is used to edit or create point user."
      operationId: "upsert_diplomas_point"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: argument needed
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: "user_id of the user you want to add "
                example: "asdasdasdasd"
              transcript_academic_id:
                type: string
                description: "transcript_academic_id of the user you want to add (required)"
                example: "asdasdasd"
              point:
                type: string
                description: "point of the user you want to add (required)"
                example: "asdasdasd"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "nft successfully"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  /diplomas/nft:
    post:
      tags:
        - "diplomas"
      summary: "nft diplomas"
      description: "This api is used to nft diplomas."
      operationId: "nft_diplomas"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: argument needed
          schema:
            type: object
            required:
              - diplomas_id
              - image_data
            properties:
              diplomas_id:
                type: string
                description: "diplomas_id of the user you want to nft (required)"
                example: "asdasdasd"
              image_data:
                type: object
                description: "image_data of the user you want to nft (required)"
                example: "asdasdasd"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "Edit point successfully"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  /diplomas/nft/{user_id}:
    get:
      tags:
        - "diplomas"
      summary: "nft diplomas"
      description: "This api is used to nft diplomas."
      operationId: "request_get_nft_diplomas"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "user_id"
          type: "string"
          required: true
          description: "user_id"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "Get nft successfully"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  /images/nft:
    post:
      tags:
        - "diplomas"
      summary: "nft diplomas"
      description: "This api is used to nft diplomas."
      operationId: "nft_images"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - data_image
            properties:
              data_image:
                type: string
                description: "images_data of the user you want to nft (required)"
                example: "asdasdasd"
      responses:
        200:
          description: "Response message after successfully added a user"
          schema:
            properties:
              message:
                type: string
                example: "Nft successfully"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.diplomas_controller"

  # login
  /login:
    post:
      tags:
        - "login"
      summary: "login"
      description: "This api is used to login"
      operationId: "login"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: arguments needed
          schema:
            type: object
            properties:
              role:
                type: "string"
                description: "role to login"
                example: "student"
              username:
                type: "string"
                description: "username to login local"
                example: "hieund"
              password:
                type: "string"
                description: "password from user to login local"
                example: "123qweaA@"
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.login_controller"

  /user/create_account:
    post:
      tags:
        - "user"
      summary: "user"
      description: "This api is used to create user"
      operationId: "create_account"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: arguments needed
          schema:
            type: object
            properties:
              user_id:
                type: "string"
                description: "user_id to create account"
                example: "is_hieund"
              username:
                type: "string"
                description: "username to login"
                example: "is_hieund"
              password:
                type: "string"
                description: "password from user to login"
                example: "123qweA#"
      responses:
        200:
          description: "Response message after successfully get a schools"
          schema:
            properties:
              message:
                type: string
                example: " get user successfully"
              data:
                type: string
                example: "{}"
        401:
          description: "Unauthorized Request"
          schema:
            $ref: "#/definitions/ApiResponseError401"
        403:
          description: "Invalid Permission"
          schema:
            $ref: "#/definitions/ApiResponseError403"
        400:
          description: "User's Error"
          schema:
            $ref: "#/definitions/ApiResponseError400"
      x-swagger-router-controller: "application.controllers.user_controller"

definitions:
  ApiResponseError500:
    type: "object"
    properties:
      error:
        type: "object"
        properties:
          code:
            type: "integer"
            example: 500
          message:
            type: "string"
            example: "Internal Issue"
  ApiResponseError401:
    type: "object"
    properties:
      error:
        type: "object"
        properties:
          code:
            type: "integer"
            example: 401
          message:
            type: "string"
            example: "Unauthorized Request."
  ApiResponseError403:
    type: "object"
    properties:
      error:
        type: "object"
        properties:
          code:
            type: "integer"
            example: 403
          message:
            type: "string"
            example: "Invalid Permission"
  ApiResponseError400:
    type: "object"
    properties:
      error:
        type: "object"
        properties:
          code:
            type: "integer"
            example: 400
          message:
            type: "string"
            example: "Error message will be displayed here and tell you the reason why it fails"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
